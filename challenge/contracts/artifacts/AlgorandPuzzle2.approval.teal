#pragma version 10

// This TEAL was generated by TEALScript v0.86.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	err

// solveThePuzzle()string
*abi_route_solveThePuzzle:
	// The ABI return prefix
	byte 0x151f7c75

	// execute solveThePuzzle()string
	callsub solveThePuzzle
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	int 1
	return

// solveThePuzzle(): string
solveThePuzzle:
	proto 0 1

	// contracts/algorand-puzzle-2.algo.ts:6
	// return 'You solved the puzzle!';
	byte 0x596f7520736f6c766564207468652070757a7a6c6521 // "You solved the puzzle!"
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication
	err

*call_NoOp:
	method "solveThePuzzle()string"
	txna ApplicationArgs 0
	match *abi_route_solveThePuzzle
	err